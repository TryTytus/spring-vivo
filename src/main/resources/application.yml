spring:
  security:
#    oauth2:
#      authorizationserver:
#        client:
#          oidc-client:
#            registration:
#              client-id: "public-client"
##              client-secret: "{noop}secret"
#              client-authentication-methods:
#                - "none"
#              authorization-grant-types:
#                - "authorization_code"
##                - "refresh_token"
#              redirect-uris:
#                - "http://localhost:4200"
##              post-logout-redirect-uris:
##                - "http://localhost:8080/"
#              scopes:
#                - "openid"
#                - "profile"
#            require-authorization-consent: true
#            require-proof-key: true


  application:
    name: demo
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  servlet:
    multipart:
      max-file-size: 1024MB
      max-request-size: 1024MB
      enabled: true
  mvc:
    static-path-pattern: /static/**
logging:
  level:
    org:
      springframework:
        security: DEBUG
springdoc:
  show-login-endpoint: true



#management.endpoints.web.cors.allowed-origins=http://localhost:4200
#management.endpoints.web.cors.allowed-methods=GET, POST, PATCH, PUT, DELETE, OPTIONS, HEAD
#management.endpoints.web.cors.max-age=3600s

#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:4200/auth/realms/baeldung/protocol/openid-connect/certs
